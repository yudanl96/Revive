syntax = "proto3";

package pb;

import "rpc_create_user.proto";
import "rpc_update_user.proto";
import "rpc_login_user.proto";
import "rpc_delete_user.proto";
import "rpc_renew_token.proto";
import "rpc_create_post.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/yudanl96/revive/pb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
        title: "Revive API";
        version: "1.3";
        contact: {
            name: "yudanl96";
            url: "https://github.com/yudanl96/Revive";
        }
    }
};

service Revive{
    rpc CreateUser (CreateUserRequest) returns (CreateUserResponse){
        option (google.api.http) ={
            post: "/v1/user"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to create a new user";
            summary: "Create new user"
        };
    }
    rpc LoginUser (LoginUserRequest) returns (LoginUserResponse){
        option (google.api.http) ={
            post: "/v1/user/login"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to login an existing user";
            summary: "Login existing user"
        };
    }
    rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse){
        option (google.api.http) ={
            patch: "/v1/user/{username}"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to update an existing user";
            summary: "Update existing user"
        };
    }
    rpc DeleteUser (DeleteUserRequest) returns (DeleteUserResponse){
        option (google.api.http) ={
            delete: "/v1/user/{username}"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to delete an existing user";
            summary: "Delete existing user"
        };
    }
    rpc RenewToken (RenewTokenRequest) returns (RenewTokenResponse){
        option (google.api.http) ={
            post: "/v1/renew_token"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to renew access token";
            summary: "Renew access token"
        };
    }
    rpc CreatePost (CreatePostRequest) returns (CreatePostResponse){
        option (google.api.http) ={
            post: "/v1/post"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to create a new item post, takes username as input arg, pass in \"genai\": true to enable GenAI created content";
            summary: "Create new post"
        };
    }
}

